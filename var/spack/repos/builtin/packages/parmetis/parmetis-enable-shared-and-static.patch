--- a/libparmetis/CMakeLists.txt	2021-03-08 08:56:47.290823277 -0600
+++ b/libparmetis/CMakeLists.txt	2021-03-08 08:50:07.206534153 -0600
@@ -3,15 +3,39 @@
 # Find sources.
 file(GLOB parmetis_sources *.c)
 # Create libparmetis
-add_library(parmetis ${ParMETIS_LIBRARY_TYPE} ${parmetis_sources})
-# Link with metis and MPI libraries.
-target_link_libraries(parmetis ${METIS_LIBRARY} ${MPI_LIBRARIES})
+# Allow for static and dynamic generation:
+#  see: https://stackoverflow.com/questions/2152077/is-it-possible-to-get-cmake-to-build-both-a-static-and-shared-version-of-the-sam
+
+# this is the "object library" target: compiles the sources only once
+add_library(parmetis_objlib OBJECT ${parmetis_sources})
+
+# shared libraries need PIC
+set_property(TARGET parmetis_objlib PROPERTY POSITION_INDEPENDENT_CODE 1)
+
+# shared and static libraries built from the same object files
+add_library(parmetis SHARED $<TARGET_OBJECTS:parmetis_objlib>)
+add_library(parmetis_static STATIC $<TARGET_OBJECTS:parmetis_objlib>)
+
+set(unix_libs "")
 if(UNIX)
-  target_link_libraries(parmetis m)
+  set(unix_libs "m")
 endif()
+
+# Link with metis and MPI libraries.
+target_link_libraries(parmetis ${METIS_LIBRARY} ${MPI_LIBRARIES} ${unix_libs})
+target_link_libraries(parmetis_static ${METIS_LIBRARY} ${MPI_LIBRARIES} ${unix_libs})
+if(ParMETIS_LIBRARY_TYPE STREQUAL "SHARED")
+  message("A")
+else()
+  message("B")
+endif()
+
+
 set_target_properties(parmetis PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
+set_target_properties(parmetis_static PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
+set_target_properties(parmetis_static PROPERTIES OUTPUT_NAME parmetis)
 
-install(TARGETS parmetis
+install(TARGETS parmetis parmetis_static
   LIBRARY DESTINATION lib
   RUNTIME DESTINATION lib
   ARCHIVE DESTINATION lib)
